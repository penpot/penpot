name: Build and Upload Penpot Bundles

on:
  workflow_dispatch:
    inputs:
      zip_mode:
        description: 'Bundle packaging mode'
        required: false
        default: 'individual'
        type: choice
        options:
          - individual
          - all
  push:
    branches:
      - github-actions-bundle

env:
  ZIP_MODE: ${{ github.event.inputs.zip_mode }}

jobs:
  build-bundles:
    name: Build frontend, backend, exporter and upload bundles
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Penpot CI Builder Image
        run: |
          docker build \
            --build-arg EXTERNAL_UID=1000 \
            --build-arg EXTERNAL_GID=1000 \
            -t penpotapp/penpot-ci-builder:latest \
            -f docker/devenv/Dockerfile \
            docker/devenv

      - name: Run manage.sh build-bundle from host
        run: ./manage.sh build-bundle

      - name: Create zip bundles
        run: |
          echo "ðŸ“¦ Packaging Penpot bundles..."
          mkdir -p zips temp

          if [[ "${ZIP_MODE}" == "all" ]]; then
            echo "Creating unified penpot-all-bundles.zip"
            mkdir -p temp/penpot-all/penpot-frontend temp/penpot-all/penpot-backend temp/penpot-all/penpot-exporter
            cp -r bundles/frontend/* temp/penpot-all/penpot-frontend/
            cp -r bundles/backend/* temp/penpot-all/penpot-backend/
            cp -r bundles/exporter/* temp/penpot-all/penpot-exporter/
            cd temp
            zip -r ../zips/penpot-all-bundles.zip penpot-all
          else
            echo "Creating individual zip files"
            for component in frontend backend exporter; do
              name="penpot-${component}"
              mkdir -p temp/${name}
              cp -r bundles/${component}/* temp/${name}/
            done
            cd temp
            for name in penpot-frontend penpot-backend penpot-exporter; do
              zip -r ../zips/${name}.zip ${name}
            done
          fi

      - name: Upload unified bundle
        if: ${{ github.event.inputs.zip_mode == 'all' }}
        uses: actions/upload-artifact@v4
        with:
          name: penpot-all-bundles
          path: zips/penpot-all-bundles.zip

      - name: Upload frontend bundle
        if: ${{ github.event.inputs.zip_mode != 'all' }}
        uses: actions/upload-artifact@v4
        with:
          name: penpot-frontend
          path: zips/penpot-frontend.zip

      - name: Upload backend bundle
        if: ${{ github.event.inputs.zip_mode != 'all' }}
        uses: actions/upload-artifact@v4
        with:
          name: penpot-backend
          path: zips/penpot-backend.zip

      - name: Upload exporter bundle
        if: ${{ github.event.inputs.zip_mode != 'all' }}
        uses: actions/upload-artifact@v4
        with:
          name: penpot-exporter
          path: zips/penpot-exporter.zip

      - name: Upload bundles to S3 with date prefix
        if: ${{ github.event.inputs.zip_mode != 'all' }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
        run: |
          FECHA=$(date +%F)
          for file in penpot-frontend.zip penpot-backend.zip penpot-exporter.zip; do
            echo "ðŸ“¤ Subiendo $file a s3://${{ secrets.S3_DEV_BUCKET }}/$FECHA/$file"
            aws s3 cp zips/$file s3://${{ secrets.S3_DEV_BUCKET }}/$FECHA/$file
          done

      - name: Generate presigned URLs (24h)
        if: ${{ github.event.inputs.zip_mode != 'all' }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
        run: |
          FECHA=$(date +%F)
          echo "ðŸ“¥ Enlaces de descarga vÃ¡lidos por 24h:"
          for file in penpot-frontend.zip penpot-backend.zip penpot-exporter.zip; do
            url=$(aws s3 presign s3://${{ secrets.S3_DEV_BUCKET }}/$FECHA/$file --expires-in 86400)
            echo "$file: $url"
          done

      - name: Print artifact summary URL
        run: |
          echo "ðŸ“¦ Artifacts disponibles en:"
          echo "ðŸ”— https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
