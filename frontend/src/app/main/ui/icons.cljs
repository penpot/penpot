;; This Source Code Form is subject to the terms of the Mozilla Public
;; License, v. 2.0. If a copy of the MPL was not distributed with this
;; file, You can obtain one at http://mozilla.org/MPL/2.0/.
;;
;; Copyright (c) KALEIDOS INC

(ns app.main.ui.icons
  (:refer-clojure :exclude [import mask])
  (:require-macros [app.main.ui.icons :refer [icon-xref collect-icons]])
  (:require
   [app.common.data :as d]
   [cuerdas.core :as str]
   [rumext.v2 :as mf]))

;; Keep the list of icons sorted
(def ^:icon icon-verify (icon-xref :icon-verify))
(def ^:icon loader (icon-xref :loader))
(def ^:icon logo (icon-xref :penpot-logo))
(def ^:icon logo-icon (icon-xref :penpot-logo-icon))
(def ^:icon logo-error-screen (icon-xref :logo-error-screen))
(def ^:icon login-illustration (icon-xref :login-illustration))

(def ^:icon brand-openid (icon-xref :brand-openid))
(def ^:icon brand-github (icon-xref :brand-github))
(def ^:icon brand-gitlab (icon-xref :brand-gitlab))
(def ^:icon brand-google (icon-xref :brand-google))

(def ^:icon absolute-refactor (icon-xref :absolute))
(def ^:icon add-refactor (icon-xref :add))
(def ^:icon align-bottom-refactor (icon-xref :align-bottom))
(def ^:icon align-content-column-around-refactor (icon-xref :align-content-column-around))
(def ^:icon align-content-column-between-refactor (icon-xref :align-content-column-between))
(def ^:icon align-content-column-center-refactor (icon-xref :align-content-column-center))
(def ^:icon align-content-column-end-refactor (icon-xref :align-content-column-end))
(def ^:icon align-content-column-evenly-refactor (icon-xref :align-content-column-evenly))
(def ^:icon align-content-column-start-refactor (icon-xref :align-content-column-start))
(def ^:icon align-content-column-stretch-refactor (icon-xref :align-content-column-stretch))
(def ^:icon align-content-row-around-refactor (icon-xref :align-content-row-around))
(def ^:icon align-content-row-between-refactor (icon-xref :align-content-row-between))
(def ^:icon align-content-row-center-refactor (icon-xref :align-content-row-center))
(def ^:icon align-content-row-end-refactor (icon-xref :align-content-row-end))
(def ^:icon align-content-row-evenly-refactor (icon-xref :align-content-row-evenly))
(def ^:icon align-content-row-start-refactor (icon-xref :align-content-row-start))
(def ^:icon align-content-row-stretch-refactor (icon-xref :align-content-row-stretch))
(def ^:icon align-horizontal-center-refactor (icon-xref :align-horizontal-center))
(def ^:icon align-items-column-center-refactor (icon-xref :align-items-column-center))
(def ^:icon align-items-column-end-refactor (icon-xref :align-items-column-end))
(def ^:icon align-items-column-start-refactor (icon-xref :align-items-column-start))
(def ^:icon align-items-row-center-refactor (icon-xref :align-items-row-center))
(def ^:icon align-items-row-end-refactor (icon-xref :align-items-row-end))
(def ^:icon align-items-row-start-refactor (icon-xref :align-items-row-start))
(def ^:icon align-left-refactor (icon-xref :align-left))
(def ^:icon align-right-refactor (icon-xref :align-right))
(def ^:icon align-self-column-bottom-refactor (icon-xref :align-self-column-bottom))
(def ^:icon align-self-column-center-refactor (icon-xref :align-self-column-center))
(def ^:icon align-self-column-stretch-refactor (icon-xref :align-self-column-stretch))
(def ^:icon align-self-column-top-refactor (icon-xref :align-self-column-top))
(def ^:icon align-self-row-center-refactor (icon-xref :align-self-row-center))
(def ^:icon align-self-row-left-refactor (icon-xref :align-self-row-left))
(def ^:icon align-self-row-right-refactor (icon-xref :align-self-row-right))
(def ^:icon align-self-row-stretch-refactor (icon-xref :align-self-row-stretch))
(def ^:icon align-top-refactor (icon-xref :align-top))
(def ^:icon align-vertical-center-refactor (icon-xref :align-vertical-center))
(def ^:icon arrow-refactor (icon-xref :arrow))
(def ^:icon asc-sort-refactor (icon-xref :asc-sort))
(def ^:icon board-refactor (icon-xref :board))
(def ^:icon boards-thumbnail-refactor (icon-xref :boards-thumbnail))
(def ^:icon boolean-difference-refactor (icon-xref :boolean-difference))
(def ^:icon boolean-exclude-refactor (icon-xref :boolean-exclude))
(def ^:icon boolean-flatten-refactor (icon-xref :boolean-flatten))
(def ^:icon boolean-intersection-refactor (icon-xref :boolean-intersection))
(def ^:icon boolean-union-refactor (icon-xref :boolean-union))
(def ^:icon bug-refactor (icon-xref :bug))
(def ^:icon clip-content-refactor (icon-xref :clip-content))
(def ^:icon clipboard-refactor (icon-xref :clipboard))
(def ^:icon close-small-refactor (icon-xref :close-small))
(def ^:icon close-refactor (icon-xref :close))
(def ^:icon code-refactor (icon-xref :code))
(def ^:icon column-reverse-refactor (icon-xref :column-reverse))
(def ^:icon column-refactor (icon-xref :column))
(def ^:icon comments-refactor (icon-xref :comments))
(def ^:icon copy-refactor (icon-xref :component-copy))
(def ^:icon component-refactor (icon-xref :component))
(def ^:icon constraint-horizontal-refactor (icon-xref :constraint-horizontal))
(def ^:icon constraint-vertical-refactor (icon-xref :constraint-vertical))
(def ^:icon corner-bottomleft-refactor (icon-xref :corner-bottom-left))
(def ^:icon corner-bottomright-refactor (icon-xref :corner-bottom-right))
(def ^:icon corner-bottom-refactor (icon-xref :corner-bottom))
(def ^:icon corner-center-refactor (icon-xref :corner-center))
(def ^:icon corner-radius-refactor (icon-xref :corner-radius))
(def ^:icon corner-top-refactor (icon-xref :corner-top))
(def ^:icon corner-topleft-refactor (icon-xref :corner-top-left))
(def ^:icon corner-topright-refactor (icon-xref :corner-top-right))
(def ^:icon curve-refactor (icon-xref :curve))
(def ^:icon delete-text-refactor (icon-xref :delete-text))
(def ^:icon delete-refactor (icon-xref :delete))
(def ^:icon desc-sort-refactor (icon-xref :desc-sort))
(def ^:icon detach-refactor (icon-xref :detach))
(def ^:icon detached-refactor (icon-xref :detached))
(def ^:icon distribute-horizontally-refactor (icon-xref :distribute-horizontally))
(def ^:icon distribute-vertical-spacing-refactor (icon-xref :distribute-vertical-spacing))
(def ^:icon document-refactor (icon-xref :document))
(def ^:icon download-refactor (icon-xref :download))
(def ^:icon drop-refactor (icon-xref :drop))
(def ^:icon easing-ease-in-out-refactor (icon-xref :easing-ease-in-out))
(def ^:icon easing-ease-in-refactor (icon-xref :easing-ease-in))
(def ^:icon easing-ease-out-refactor (icon-xref :easing-ease-out))
(def ^:icon easing-ease-refactor (icon-xref :easing-ease))
(def ^:icon easing-linear-refactor (icon-xref :easing-linear))
(def ^:icon effects-refactor (icon-xref :effects))
(def ^:icon elipse-refactor (icon-xref :elipse))
(def ^:icon exit-refactor (icon-xref :exit))
(def ^:icon expand-refactor (icon-xref :expand))
(def ^:icon feedback-refactor (icon-xref :feedback))
(def ^:icon fill-content-refactor (icon-xref :fill-content))
(def ^:icon filter-refactor (icon-xref :filter))
(def ^:icon fixed-width-refactor (icon-xref :fixed-width))
(def ^:icon flex-grid-refactor (icon-xref :flex-grid))
(def ^:icon flex-horizontal-refactor (icon-xref :flex-horizontal))
(def ^:icon flex-vertical-refactor (icon-xref :flex-vertical))
(def ^:icon flex-refactor (icon-xref :flex))
(def ^:icon flip-horizontal-refactor (icon-xref :flip-horizontal))
(def ^:icon flip-vertical-refactor (icon-xref :flip-vertical))
(def ^:icon gap-horizontal-refactor (icon-xref :gap-horizontal))
(def ^:icon gap-vertical-refactor (icon-xref :gap-vertical))
(def ^:icon graphics-refactor (icon-xref :graphics))
(def ^:icon grid-column-refactor (icon-xref :grid-column))
(def ^:icon grid-columns-refactor (icon-xref :grid-columns))
(def ^:icon grid-gutter-refactor (icon-xref :grid-gutter))
(def ^:icon grid-margin-refactor (icon-xref :grid-margin))
(def ^:icon grid-refactor (icon-xref :grid))
(def ^:icon grid-row-refactor (icon-xref :grid-row))
(def ^:icon grid-rows-refactor (icon-xref :grid-rows))
(def ^:icon grid-square-refactor (icon-xref :grid-square))
(def ^:icon group-refactor (icon-xref :group))
(def ^:icon gutter-horizontal-refactor (icon-xref :gutter-horizontal))
(def ^:icon gutter-vertical-refactor (icon-xref :gutter-vertical))
(def ^:icon help-refactor (icon-xref :help))
(def ^:icon hide-refactor (icon-xref :hide))
(def ^:icon history-refactor (icon-xref :history))
(def ^:icon hsva-refactor (icon-xref :hsva))
(def ^:icon hug-content-refactor (icon-xref :hug-content))
(def ^:icon icon-refactor (icon-xref :icon))
(def ^:icon img-refactor (icon-xref :img))
(def ^:icon interaction-refactor (icon-xref :interaction))
(def ^:icon join-nodes-refactor (icon-xref :join-nodes))
(def ^:icon justify-content-column-around-refactor (icon-xref :justify-content-column-around))
(def ^:icon justify-content-column-between-refactor (icon-xref :justify-content-column-between))
(def ^:icon justify-content-column-center-refactor (icon-xref :justify-content-column-center))
(def ^:icon justify-content-column-end-refactor (icon-xref :justify-content-column-end))
(def ^:icon justify-content-column-evenly-refactor (icon-xref :justify-content-column-evenly))
(def ^:icon justify-content-column-start-refactor (icon-xref :justify-content-column-start))
(def ^:icon justify-content-row-around-refactor (icon-xref :justify-content-row-around))
(def ^:icon justify-content-row-between-refactor (icon-xref :justify-content-row-between))
(def ^:icon justify-content-row-center-refactor (icon-xref :justify-content-row-center))
(def ^:icon justify-content-row-end-refactor (icon-xref :justify-content-row-end))
(def ^:icon justify-content-row-evenly-refactor (icon-xref :justify-content-row-evenly))
(def ^:icon justify-content-row-start-refactor (icon-xref :justify-content-row-start))
(def ^:icon layers-refactor (icon-xref :layers))
(def ^:icon library-refactor (icon-xref :library))
(def ^:icon locate-refactor (icon-xref :locate))
(def ^:icon lock-refactor (icon-xref :lock)) ;; This icon will not change
(def ^:icon logo-refactor (icon-xref :penpot-logo-icon))
(def ^:icon margin-bottom-refactor (icon-xref :margin-bottom))
(def ^:icon margin-left-refactor (icon-xref :margin-left))
(def ^:icon margin-left-right-refactor (icon-xref :margin-left-right))
(def ^:icon margin-right-refactor (icon-xref :margin-right))
(def ^:icon margin-top-bottom-refactor (icon-xref :margin-top-bottom))
(def ^:icon margin-top-refactor (icon-xref :margin-top))
(def ^:icon margin-refactor (icon-xref :margin))
(def ^:icon mask-refactor (icon-xref :mask))
(def ^:icon masked-refactor (icon-xref :masked))
(def ^:icon menu-refactor (icon-xref :menu))
(def ^:icon merge-nodes-refactor (icon-xref :merge-nodes))
(def ^:icon move-refactor (icon-xref :move))
(def ^:icon msg-error-refactor (icon-xref :msg-error))
(def ^:icon msg-neutral-refactor (icon-xref :msg-neutral))
(def ^:icon msg-success-refactor (icon-xref :msg-success))
(def ^:icon msg-warning-refactor (icon-xref :msg-warning))
(def ^:icon open-link-refactor (icon-xref :open-link))
(def ^:icon padding-bottom-refactor (icon-xref :padding-bottom))
(def ^:icon padding-extended-refactor (icon-xref :padding-extended))
(def ^:icon padding-left-right-refactor (icon-xref :padding-left-right))
(def ^:icon padding-left-refactor (icon-xref :padding-left))
(def ^:icon padding-right-refactor (icon-xref :padding-right))
(def ^:icon padding-top-bottom-refactor (icon-xref :padding-top-bottom))
(def ^:icon padding-top-refactor (icon-xref :padding-top))
(def ^:icon path-refactor (icon-xref :path))
(def ^:icon pentool-refactor (icon-xref :pentool))
(def ^:icon picker-refactor (icon-xref :picker))
(def ^:icon pin-refactor (icon-xref :pin))
(def ^:icon play-refactor (icon-xref :play))
(def ^:icon rectangle-refactor (icon-xref :rectangle))
(def ^:icon reload-refactor (icon-xref :reload))
(def ^:icon remove-refactor (icon-xref :remove))
(def ^:icon rgba-complementary-refactor (icon-xref :rgba-complementary))
(def ^:icon rgba-refactor (icon-xref :rgba))
(def ^:icon rotation-refactor (icon-xref :rotation))
(def ^:icon row-reverse-refactor (icon-xref :row-reverse))
(def ^:icon row-refactor (icon-xref :row))
(def ^:icon search-refactor (icon-xref :search))
(def ^:icon separate-nodes-refactor (icon-xref :separate-nodes))
(def ^:icon shown-refactor (icon-xref :shown))
(def ^:icon size-horizontal-refactor (icon-xref :size-horizontal))
(def ^:icon size-vertical-refactor (icon-xref :size-vertical))
(def ^:icon snap-nodes-refactor (icon-xref :snap-nodes))
(def ^:icon status-alert-refactor (icon-xref :status-alert))
(def ^:icon status-tick-refactor (icon-xref :status-tick))
(def ^:icon status-update-refactor (icon-xref :status-update))
(def ^:icon status-wrong-refactor (icon-xref :status-wrong))
(def ^:icon stroke-arrow-refactor (icon-xref :stroke-arrow))
(def ^:icon stroke-circle-refactor (icon-xref :stroke-circle))
(def ^:icon stroke-diamond-refactor (icon-xref :stroke-diamond))
(def ^:icon stroke-rectangle-refactor (icon-xref :stroke-rectangle))
(def ^:icon stroke-rounded-refactor (icon-xref :stroke-rounded))
(def ^:icon stroke-size-refactor (icon-xref :stroke-size))
(def ^:icon stroke-squared-refactor (icon-xref :stroke-squared))
(def ^:icon stroke-triangle-refactor (icon-xref :stroke-triangle))
(def ^:icon svg-refactor (icon-xref :svg))
(def ^:icon swatches-refactor (icon-xref :swatches))
(def ^:icon switch-refactor (icon-xref :switch))
(def ^:icon text-align-center-refactor (icon-xref :text-align-center))
(def ^:icon text-align-left-refactor (icon-xref :text-align-left))
(def ^:icon text-align-right-refactor (icon-xref :text-align-right))
(def ^:icon text-auto-height-refactor (icon-xref :text-auto-height))
(def ^:icon text-auto-width-refactor (icon-xref :text-auto-width))
(def ^:icon text-bottom-refactor (icon-xref :text-bottom))
(def ^:icon text-fixed-refactor (icon-xref :text-fixed))
(def ^:icon text-justify-refactor (icon-xref :text-justify))
(def ^:icon text-letterspacing-refactor (icon-xref :text-letterspacing))
(def ^:icon text-lineheight-refactor (icon-xref :text-lineheight))
(def ^:icon text-lowercase-refactor (icon-xref :text-lowercase))
(def ^:icon text-ltr-refactor (icon-xref :text-ltr))
(def ^:icon text-middle-refactor (icon-xref :text-middle))
(def ^:icon text-mixed-refactor (icon-xref :text-mixed))
(def ^:icon text-palette-refactor (icon-xref :text-palette))
(def ^:icon text-paragraph-refactor (icon-xref :text-paragraph))
(def ^:icon text-rtl-refactor (icon-xref :text-rtl))
(def ^:icon text-stroked-refactor (icon-xref :text-stroked))
(def ^:icon text-top-refactor (icon-xref :text-top))
(def ^:icon text-underlined-refactor (icon-xref :text-underlined))
(def ^:icon text-uppercase-refactor (icon-xref :text-uppercase))
(def ^:icon text-refactor (icon-xref :text))
(def ^:icon thumbnail-refactor (icon-xref :thumbnail))
(def ^:icon tick-refactor (icon-xref :tick))
(def ^:icon to-corner-refactor (icon-xref :to-corner))
(def ^:icon to-curve-refactor (icon-xref :to-curve))
(def ^:icon tree-refactor (icon-xref :tree))
(def ^:icon unlock-refactor (icon-xref :unlock))
(def ^:icon user-refactor (icon-xref :user))
(def ^:icon v2-icon-1 (icon-xref :v2-icon-1))
(def ^:icon v2-icon-2 (icon-xref :v2-icon-2))
(def ^:icon v2-icon-3 (icon-xref :v2-icon-3))
(def ^:icon v2-icon-4 (icon-xref :v2-icon-4))
(def ^:icon vertical-align-items-center-refactor (icon-xref :vertical-align-items-center))
(def ^:icon vertical-align-items-end-refactor (icon-xref :vertical-align-items-end))
(def ^:icon vertical-align-items-start-refactor (icon-xref :vertical-align-items-start))
(def ^:icon view-as-icons-refactor (icon-xref :view-as-icons))
(def ^:icon view-as-list-refactor (icon-xref :view-as-list))
(def ^:icon wrap-refactor (icon-xref :wrap))


(def ^:icon loader-pencil
  (mf/html
   [:svg
    {:viewBox "0 0 677.34762 182.15429"
     :height "182"
     :width "667"
     :id "loader-pencil"}
    [:g
     [:path
      {:id "body-body"
       :d
       "M128.273 0l-3.9 2.77L0 91.078l128.273 91.076 549.075-.006V.008L128.273 0zm20.852 30l498.223.006V152.15l-498.223.007V30zm-25 9.74v102.678l-49.033-34.813-.578-32.64 49.61-35.225z"}]
     [:path
      {:id "loader-line"
       :d
       "M134.482 157.147v25l518.57.008.002-25-518.572-.008z"}]]]))

(def default
  "A collection of all icons"
  (collect-icons))

(mf/defc debug-icons-preview
  {::mf/wrap-props false}
  []
  (let [entries   (->> (seq (js/Object.entries default))
                       (sort-by first))
        refactor? (fn [[key]] (str/ends-with? key "Refactor"))]
    [:*
     [:section.debug-icons-preview
      [:h2.subtitle-old "Classic (Deprecated)"]
      (for [[key val] (remove refactor? entries)]
        [:div.icon-item-old {:key key
                             :title key}
         val
         [:span key]])]

     [:section.debug-icons-preview
      [:h2 "Refactor"]
      (for [[key val] (filter refactor? entries)]
        [:div.icon-item {:key key
                         :title key}
         val
         [:span key]])]]))

(defn key->icon
  [icon-key]
  (when icon-key
    (unchecked-get default (-> icon-key d/name str/camel str/capital))))
