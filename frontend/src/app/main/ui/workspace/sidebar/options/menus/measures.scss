// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.
//
// Copyright (c) KALEIDOS INC

@import "refactor/common-refactor.scss";

.element-set {
  display: grid;
  row-gap: var(--sp-xs);
  margin-bottom: var(--sp-s);
  // NOTE: this does not follow the 8-column grid and the size is not normalized,
  // so we need to hardcode this width :(
  --input-width: calc(var(--sp-xxxl) * 3.5 - 2 * var(--sp-xs));
  grid-template-columns: var(--input-width) var(--input-width) var(--sp-xxxl);
  column-gap: var(--sp-xs);
}

.presets {
  display: grid;
  grid-column: 1 / -1;
  grid-template-columns: repeat(8, var(--sp-xxxl));
  gap: $s-4;
}

.presets-wrapper {
  @extend .asset-element;
  position: relative;
  grid-column: span 4;
  display: flex;
  height: $s-32;
  padding: $s-8;
  border-radius: $br-8;

  .collapsed-icon {
    @include flexCenter;
    cursor: pointer;
    svg {
      @extend .button-icon-small;
      stroke: var(--icon-foreground);
      transform: rotate(90deg);
    }
  }

  &:hover {
    .collapsed-icon svg {
      stroke: var(--input-foreground-color-active);
    }
  }
}

.radio-buttons {
  grid-column: span 2;
}

.select-name {
  @include bodySmallTypography;
  display: flex;
  justify-content: flex-start;
  align-items: center;
  flex-grow: 1;
  cursor: pointer;
}

.custom-select-dropdown {
  @extend .dropdown-wrapper;
  margin-top: $s-2;
  max-height: 70vh;
  width: $s-252;
  .dropdown-element {
    @extend .dropdown-element-base;
    .name-wrapper {
      display: flex;
      gap: $s-8;
      flex-grow: 1;
      .preset-name {
        color: var(--menu-foreground-color-rest);
      }
      .preset-size {
        color: var(--menu-foreground-color-rest);
      }
    }

    .check-icon {
      @include flexCenter;
      svg {
        @extend .button-icon-small;
        stroke: var(--icon-foreground);
      }
    }

    &.disabled {
      pointer-events: none;
      cursor: default;
      .preset-name {
        color: var(--menu-foreground-color);
      }
    }

    &.match {
      .name-wrapper .preset-name {
        color: var(--menu-foreground-color-hover);
      }
      .check-icon svg {
        stroke: var(--menu-foreground-color-hover);
      }
    }

    &:hover {
      background-color: var(--menu-background-color-hover);
      .name-wrapper .preset-name {
        color: var(--menu-foreground-color-hover);
      }
      .check-icon svg {
        stroke: var(--menu-foreground-color-hover);
      }
    }
  }
}

.size,
.position,
.rotation-radius {
  display: grid;
  grid-template-columns: subgrid;
  grid-column: 1/-1;
}

.height,
.width,
.x-position,
.y-position,
.rotation {
  @extend .input-element;
  @include bodySmallTypography;
  .icon-text {
    padding-top: $s-1;
  }
  &.disabled {
    @extend .disabled-input;
  }
}

.border-radius {
  grid-column: 2/-1;
}

.lock-size-btn {
  @extend .button-tertiary;
  border-radius: $br-8;
  height: $s-32;
  width: $s-28;
  &.selected {
    @extend .button-icon-selected;
  }
}

.lock-ratio-icon {
  @extend .button-icon;
  stroke: var(--icon-foreground);
}

.clip-show {
  display: flex;
  align-items: flex-start;
  justify-content: flex-start;
  gap: $s-4;
}

.clip-content,
.show-in-viewer {
  .clip-content-input {
    display: none;
  }
}

.clip-content-label {
  @extend .button-tertiary;
  height: var(--sp-xxxl);
  width: var(--sp-xxxl);
  border-radius: $br-8;
}

.selected {
  @extend .button-icon-selected;
}

.checkbox-button {
  @extend .button-icon;
}
